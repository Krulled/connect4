import {useState} from 'react'
import Head from 'next/head'
import Image from 'next/image'

const GameColumn = ({col, idx, onClick}) => {
  return (
    <div className="column" key={`col-${idx}`} onClick={onClick}>
      {col.map((cell, x) => {
        return <span className="cell" key={`cell-${idx}-${x}`}>{cell}</span>
      })}
      <style jsx>{`
       .column {
        display: flex;
        flex-direction: column-reverse;
        flex-grow: 1;
        border: 1px solid blue;
        padding: 10px;
       }
       .cell {
        display: flex;
        flex-grow: 1;
        align-items: center;
        justify-content: center;
        height: 20px;
       }
     `}</style>
    </div>
    
  )
}
const x_piece = "ðŸ”´"
const o_piece = "ðŸŸ¡"
const ConnectFourGame = () => {
  let initial = {};
  for (var c=0; c < 7; c++){
    initial[c]=[null, null, null, null, null, null];
  }
  const [gameState, setGameState] = useState(initial);
  const [winner, setWinner] = useState(null);
  const [currentPlayer, setCurrentPlayer] = useState(x_piece);
  
  const gameOver = () => {
    let column;
    //check column
    for (var c=0; c<7; c++) {
      for (var r=0; r<6 - 3; r++) {
        if (gameState[c][r] != null &&
          gameState[c][r]==gameState[c][r+1] && 
          gameState[c][r+1]==gameState[c][r+2] &&
          gameState[c][r+2]==gameState[c][r+3]){
            return true;
          }
      }
    }
    //check row
    for (var c=0; c<7-3; c++) {
      for (var r=0; r<6; r++) {
        if (gameState[c][r] != null &&
          gameState[c][r]==gameState[c+1][r] && 
          gameState[c+1][r]==gameState[c+2][r] &&
          gameState[c+2][r]==gameState[c+3][r]){
            return true;
          }
      }
    }
    //check diag up right
    for (var c=0; c<7; c++) {
      for (var r=5; r>=3; r--) {
        if (gameState[c][r] != null &&
          gameState[c][r]==gameState[c+1][r+1] && 
          gameState[c+1][r+1]==gameState[c+2][r+2] &&
          gameState[c+2][r+2]==gameState[c+3][r+3]){
            return true;
          }
      }
    }
    //check diag down right
    for (var c=0; c<7; c++) {
      for (var r=5; r>=3; r--) {
        if (gameState[c][r] != null &&
          gameState[c][r]==gameState[c+1][r-1] && 
          gameState[c+1][r-1]==gameState[c+2][r-2] &&
          gameState[c+2][r-2]==gameState[c+3][r-3]){
            return true;
          }
      }
    }
    
  }
  
  const addPiece = (columnIdx) => {
      console.log(columnIdx);
      const column = gameState[columnIdx];
      const piecePos = column.indexOf(null);
      column[piecePos] = currentPlayer;
      setGameState({
        ...gameState,
        [columnIdx]: column
        
      })
      // gg?
      if (gameOver()){
        setWinner(currentPlayer)
      }
      
      setCurrentPlayer(currentPlayer == x_piece ? o_piece : x_piece)
      
  }

  if(winner) {
    return <h1> {winner} is the winner </h1>
  } else{
  return (

    <div className="board">
     {Object.entries(gameState).map(([k, col], x) => {
        return <GameColumn col={col} idx={x} onClick={() => addPiece(x)}/>;
        
     })}
     <style jsx>{`
       .board {
        display: flex;
        flex: 1;
       }
     `}</style>
    </div>
  );
      }
}

export default function Home() {
  return (
    <div>
      <Head>
        <title>Connect 4</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>
          Connect 4
        </h1>
        <ConnectFourGame />
      </main>
    </div>
  )
}
